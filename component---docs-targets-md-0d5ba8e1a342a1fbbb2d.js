(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{txtL:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return p})),t.d(a,"default",(function(){return o}));var n=t("wx14"),s=t("zLVn"),m=(t("q1tI"),t("7ljp")),c=t("BIGe"),l=(t("qKvR"),["components"]),p={};void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!Object.prototype.hasOwnProperty.call(p,"__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/targets.md"}});var r={_frontmatter:p},i=c.a;function o(e){var a=e.components,t=Object(s.a)(e,l);return Object(m.b)(i,Object(n.a)({},r,t,{components:a,mdxType:"MDXLayout"}),Object(m.b)("h1",{id:"output-filtering"},"Output Filtering"),Object(m.b)("p",null,"When a project becomes bigger over time and includes a lot of Kubernetes\nobjects, it may become required to operate on only a subset of them (e.g. apply\nonly a part of an application)."),Object(m.b)("p",null,"Tanka helps you with this, by allowing you to limit the used objects on the\ncommand line using the ",Object(m.b)("inlineCode",{parentName:"p"},"--target")," flag. Say you are deploying an ",Object(m.b)("inlineCode",{parentName:"p"},"nginx"),"\ninstance with a special ",Object(m.b)("inlineCode",{parentName:"p"},"nginx.conf")," and want to apply the ",Object(m.b)("inlineCode",{parentName:"p"},"ConfigMap")," first:"),Object(m.b)("pre",{className:"material-theme-darker vscode-highlight","data-language":"bash"},Object(m.b)("code",{parentName:"pre",className:"vscode-highlight-code"},Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# show the ConfigMap")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"$ tk show -t configmap/nginx "),Object(m.b)("span",{parentName:"span",className:"mtk9"},".")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"})),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# all good? apply!")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"$ tk apply -t configmap/nginx "),Object(m.b)("span",{parentName:"span",className:"mtk9"},".")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"})),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# and apply everything else:")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"$ tk apply "),Object(m.b)("span",{parentName:"span",className:"mtk9"},".")))),Object(m.b)("p",null,"The syntax of the ",Object(m.b)("inlineCode",{parentName:"p"},"--target")," / ",Object(m.b)("inlineCode",{parentName:"p"},"-t")," flag is ",Object(m.b)("inlineCode",{parentName:"p"},"--target=<kind>/<name>"),". If\nmultiple objects match this pattern, all of them are used."),Object(m.b)("p",null,"The ",Object(m.b)("inlineCode",{parentName:"p"},"--target")," / ",Object(m.b)("inlineCode",{parentName:"p"},"-t")," flag can be specified multiple times, to work with\nmultiple objects."),Object(m.b)("h2",{id:"regular-expressions"},"Regular Expressions"),Object(m.b)("p",null,"The argument passed to the ",Object(m.b)("inlineCode",{parentName:"p"},"--target")," flag is interpreted as a\n",Object(m.b)("a",{parentName:"p",href:"https://github.com/google/re2/wiki/Syntax"},"RE2")," regular expression."),Object(m.b)("p",null,"This allows you to use all sorts of wildcards and other advanced matching\nfunctionality to select Kubernetes objects:"),Object(m.b)("pre",{className:"material-theme-darker vscode-highlight","data-language":"bash"},Object(m.b)("code",{parentName:"pre",className:"vscode-highlight-code"},Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# show all deployments")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"$ tk show "),Object(m.b)("span",{parentName:"span",className:"mtk9"},"."),Object(m.b)("span",{parentName:"span",className:"mtk1"}," -t "),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'"),Object(m.b)("span",{parentName:"span",className:"mtk6"},"deployment/.*"),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"})),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},'# show all objects named "loki"')),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"$ tk show "),Object(m.b)("span",{parentName:"span",className:"mtk9"},"."),Object(m.b)("span",{parentName:"span",className:"mtk1"}," -t "),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'"),Object(m.b)("span",{parentName:"span",className:"mtk6"},".*/loki"),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'")))),Object(m.b)("h3",{id:"gotchas"},"Gotchas"),Object(m.b)("p",null,"When using regular expressions, there are some things to watch out for:"),Object(m.b)("h4",{id:"line-anchors"},"Line Anchors"),Object(m.b)("p",null,"Tanka automatically surrounds your regular expression with line anchors:"),Object(m.b)("pre",{className:"material-theme-darker vscode-highlight","data-language":"text"},Object(m.b)("code",{parentName:"pre",className:"vscode-highlight-code"},Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},"^<your expression>$"))),Object(m.b)("p",null,"For example, ",Object(m.b)("inlineCode",{parentName:"p"},"--target 'deployment/.*'")," becomes ",Object(m.b)("inlineCode",{parentName:"p"},"^deployment/.*$"),"."),Object(m.b)("h4",{id:"quoting"},"Quoting"),Object(m.b)("p",null,"Regular expressions may consist of characters that have special meanings in\nshell. Always make sure to properly quote your regular expression using ",Object(m.b)("strong",{parentName:"p"},"single\nquotes"),"."),Object(m.b)("pre",{className:"material-theme-darker vscode-highlight","data-language":"zsh"},Object(m.b)("code",{parentName:"pre",className:"vscode-highlight-code"},Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# shell attempts to match the wildcard itself:")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"zsh-5.4.2$ tk show "),Object(m.b)("span",{parentName:"span",className:"mtk9"},"."),Object(m.b)("span",{parentName:"span",className:"mtk1"}," -t deployment/."),Object(m.b)("span",{parentName:"span",className:"mtk12"},"*")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"zsh: no matches found: deployment/."),Object(m.b)("span",{parentName:"span",className:"mtk12"},"*")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"})),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# properly quoted:")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"zsh-5.4.2$ tk show "),Object(m.b)("span",{parentName:"span",className:"mtk9"},"."),Object(m.b)("span",{parentName:"span",className:"mtk1"}," -t "),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'"),Object(m.b)("span",{parentName:"span",className:"mtk6"},"deployment/.*"),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"---")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"apiVersion: apps/v1")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"kind: Deployment")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# ...")))),Object(m.b)("h2",{id:"excluding"},"Excluding"),Object(m.b)("p",null,"Sometimes it may be desirably to exclude a single object, instead of including all others."),Object(m.b)("p",null,"To do so, prepend the regular expression with an exclamation mark (",Object(m.b)("inlineCode",{parentName:"p"},"!"),"), like so:"),Object(m.b)("pre",{className:"material-theme-darker vscode-highlight","data-language":"bash"},Object(m.b)("code",{parentName:"pre",className:"vscode-highlight-code"},Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk3 mtki"},"# filter out all Deployments")),"\n",Object(m.b)("span",{parentName:"code",className:"vscode-highlight-line"},Object(m.b)("span",{parentName:"span",className:"mtk1"},"$ tk show "),Object(m.b)("span",{parentName:"span",className:"mtk9"},"."),Object(m.b)("span",{parentName:"span",className:"mtk1"}," -t "),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'"),Object(m.b)("span",{parentName:"span",className:"mtk6"},"!deployment/.*"),Object(m.b)("span",{parentName:"span",className:"mtk5"},"'")))),Object(m.b)("style",{className:"vscode-highlight-styles"},"\n  \n  .material-theme-darker {\nbackground-color: #212121;\ncolor: #EEFFFF;\n}\n\n.material-theme-darker .mtk1 { color: #FFFFFF; }\n.material-theme-darker .mtk2 { color: #212121; }\n.material-theme-darker .mtk3 { color: #545454; }\n.material-theme-darker .mtk4 { color: #F78C6C; }\n.material-theme-darker .mtk5 { color: #89DDFF; }\n.material-theme-darker .mtk6 { color: #C3E88D; }\n.material-theme-darker .mtk7 { color: #FFCB6B; }\n.material-theme-darker .mtk8 { color: #EEFFFF; }\n.material-theme-darker .mtk9 { color: #82AAFF; }\n.material-theme-darker .mtk10 { color: #FF5370; }\n.material-theme-darker .mtk11 { color: #F07178; }\n.material-theme-darker .mtk12 { color: #C792EA; }\n.material-theme-darker .mtk13 { color: #EEFFFF90; }\n.material-theme-darker .mtk14 { color: #65737E; }\n.material-theme-darker .mtk15 { color: #B2CCD6; }\n.material-theme-darker .mtk16 { color: #C17E70; }\n.material-theme-darker .mtki { font-style: italic; }\n.material-theme-darker .mtkb { font-weight: bold; }\n.material-theme-darker .mtku { text-decoration: underline; text-underline-position: under; }\n"))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!Object.prototype.hasOwnProperty.call(o,"__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/targets.md"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-targets-md-0d5ba8e1a342a1fbbb2d.js.map