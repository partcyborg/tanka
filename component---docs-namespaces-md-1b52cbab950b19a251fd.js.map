{"version":3,"sources":["webpack:///./docs/namespaces.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---docs-namespaces-md-1b52cbab950b19a251fd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/tanka/tanka/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"namespaces\"\n    }}>{`Namespaces`}</h1>\n    <p>{`When using Tanka, namespaces are handled slightly different compared to\n`}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`, because environments offer more granular control than contexts used\nby `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"default-namespaces\"\n    }}>{`Default namespaces`}</h2>\n    <p>{`In the `}<a parentName=\"p\" {...{\n        \"href\": \"/config/#file-format\"\n      }}><inlineCode parentName=\"a\">{`spec.json`}</inlineCode></a>{` of each environment, you can set the\n`}<inlineCode parentName=\"p\">{`spec.namespace`}</inlineCode>{` field, which is the default namespace. The default namespace is\nset for every resource that `}<strong parentName=\"p\">{`does not`}</strong>{` have a namespace `}<strong parentName=\"p\">{`set from Jsonnet`}</strong>{`.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Scenario`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`1.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Your resource `}<strong parentName=\"td\">{`lacks namespace`}</strong>{` information (`}<inlineCode parentName=\"td\">{`metadata.namespace`}</inlineCode>{`) unset or `}<inlineCode parentName=\"td\">{`\"\"`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tanka sets `}<inlineCode parentName=\"td\">{`metadata.namespace`}</inlineCode>{` to the value of `}<inlineCode parentName=\"td\">{`spec.namespace`}</inlineCode>{` in `}<inlineCode parentName=\"td\">{`spec.json`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`2.`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Your resource `}<strong parentName=\"td\">{`already has`}</strong>{` namespace information`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Tanka does nothing, accepting the explicit namespace`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`While we recommend keeping environments limited to a single namespace, there are\nlegit cases where it's handy to have them span multiple namespaces, for example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Some other piece of software (Operators, etc) require resources to be in a specific namespace`}</li>\n      <li parentName=\"ul\">{`A rarely changing \"base\" environment holding resources deployed for many clusters in the same way`}</li>\n      <li parentName=\"ul\">{`etc.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"cluster-wide-resources\"\n    }}>{`Cluster-wide resources`}</h2>\n    <p>{`Some resources in Kubernetes are cluster-wide, meaning they don't belong to a single namespace at all.`}</p>\n    <p>{`Tanka will make an attempt to not add namespaces to `}<em parentName=\"p\">{`known`}</em>{` cluster-wide types.\nIt does this with a short list of types in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/grafana/tanka/blob/main/pkg/process/namespace.go\"\n      }}>{`the source code`}</a>{`.`}</p>\n    <p>{`Tanka cannot feasibly maintain this list for all known custom resource types. In those cases, resources will have namespaces added to their manifests,\nand kubectl should happily apply them as non-namespaced resources.`}</p>\n    <p>{`If this presents a problem for your workflow, you can `}<strong parentName=\"p\">{`override this`}</strong>{` behavior\nper-resource, by setting the `}<inlineCode parentName=\"p\">{`tanka.dev/namespaced`}</inlineCode>{` annotation to `}<inlineCode parentName=\"p\">{`\"false\"`}</inlineCode>{`\n(must be of `}<inlineCode parentName=\"p\">{`string`}</inlineCode>{` type):`}</p>\n    <pre {...{\n      \"className\": \"material-theme-darker vscode-highlight\",\n      \"data-language\": \"jsonnet\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk10\"\n          }}>{`thing:`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` clusterRole.`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk9\"\n          }}>{`new`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`(`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk6\"\n          }}>{`\"myClusterRole\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`       `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`+`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` clusterRole.mixin.metadata.`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk9\"\n          }}>{`withAnnotationsMixin`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`({ `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk6\"\n          }}>{`\"tanka.dev/namespaced\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`: `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk6\"\n          }}>{`\"false\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` })`}</span></span></code></pre>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  \n  .material-theme-darker {\nbackground-color: #212121;\ncolor: #EEFFFF;\n}\n\n.material-theme-darker .mtk1 { color: #FFFFFF; }\n.material-theme-darker .mtk2 { color: #212121; }\n.material-theme-darker .mtk3 { color: #545454; }\n.material-theme-darker .mtk4 { color: #F78C6C; }\n.material-theme-darker .mtk5 { color: #89DDFF; }\n.material-theme-darker .mtk6 { color: #C3E88D; }\n.material-theme-darker .mtk7 { color: #FFCB6B; }\n.material-theme-darker .mtk8 { color: #EEFFFF; }\n.material-theme-darker .mtk9 { color: #82AAFF; }\n.material-theme-darker .mtk10 { color: #FF5370; }\n.material-theme-darker .mtk11 { color: #F07178; }\n.material-theme-darker .mtk12 { color: #C792EA; }\n.material-theme-darker .mtk13 { color: #EEFFFF90; }\n.material-theme-darker .mtk14 { color: #65737E; }\n.material-theme-darker .mtk15 { color: #B2CCD6; }\n.material-theme-darker .mtk16 { color: #C17E70; }\n.material-theme-darker .mtki { font-style: italic; }\n.material-theme-darker .mtkb { font-weight: bold; }\n.material-theme-darker .mtku { text-decoration: underline; text-underline-position: under; }\n`}</style>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}