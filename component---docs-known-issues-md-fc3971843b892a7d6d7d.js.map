{"version":3,"sources":["webpack:///./docs/known-issues.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"uRAQaA,EAAe,Q,4NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,gBADR,gBAGA,kFACA,kBACE,GAAM,oFADR,iGAGA,4CAA2B,0BAAYC,WAAW,KAAvB,WAA3B,wEACiB,0BAAYA,WAAW,KAAvB,aADjB,4GAGqC,0BAAYA,WAAW,KAAvB,UAHrC,oFAKF,iBAAGA,WAAW,IACR,KAAQ,qCADd,gBALE,KAQA,kBACE,GAAM,oHADR,4HAGA,sDAAqC,0BAAYA,WAAW,KAAvB,iBAArC,iEACkB,0BAAYA,WAAW,KAAvB,iBADlB,mHAE4D,0BAAYA,WAAW,KAAvB,MAF5D,KAGA,mBACE,UAAa,yCACb,gBAAiB,QAChB,oBAAMA,WAAW,MAChB,UAAa,yBACZ,oBAAMA,WAAW,OAChB,UAAa,yBACZ,oBAAMA,WAAW,OAChB,UAAa,QADd,iEAJJ,KAOL,oBAAMA,WAAW,OACT,UAAa,yBACZ,oBAAMA,WAAW,OAChB,UAAa,QADd,MAEe,oBAAMA,WAAW,OAC/B,UAAa,QADC,QAEE,oBAAMA,WAAW,OACjC,UAAa,QADG,KAEH,oBAAMA,WAAW,OAC9B,UAAa,QADA,KAEA,oBAAMA,WAAW,OAC9B,UAAa,QADA,sEAEiE,oBAAMA,WAAW,OAC/F,UAAa,QADiE,KAEjE,oBAAMA,WAAW,OAC9B,UAAa,QADA,KAEA,oBAAMA,WAAW,OAC9B,UAAa,SADA,KAEA,oBAAMA,WAAW,OAC9B,UAAa,QADA,uBAGrB,4CACA,2CAA0B,0BAAYA,WAAW,KAAvB,iBAA1B,gBAAoG,0BAAYA,WAAW,KAAvB,sDAApG,2BACkB,0BAAYA,WAAW,KAAvB,QADlB,6DAEA,qEAAoD,0BAAYA,WAAW,KAAvB,eAApD,mBACF,iBAAGA,WAAW,IACR,KAAQ,6CADd,6CADE,6BAIA,kBACE,GAAM,mEADR,mEAGA,2BACF,iBAAGA,WAAW,IACR,KAAQ,yDADd,wBAEgC,0BAAYA,WAAW,KAAvB,YAH9B,0LAMoB,0BAAYA,WAAW,KAAvB,OANpB,QAM4E,0BAAYA,WAAW,KAAvB,OAN5E,mBAM+I,0BAAYA,WAAW,KAAvB,YAN/I,gCASA,qBACE,UAAa,2BADf,glC,0NAgCJJ,EAAWK,gBAAiB","file":"component---docs-known-issues-md-fc3971843b892a7d6d7d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/tanka/tanka/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"known-issues\"\n    }}>{`Known Issues`}</h1>\n    <p>{`Below is a list of common errors and how to address them.`}</p>\n    <h3 {...{\n      \"id\": \"evaluating-jsonnet-runtime-error-undefined-external-variable-__ksonnetcomponents\"\n    }}>{`Evaluating jsonnet: RUNTIME ERROR: Undefined external variable: `}{`_`}{`_`}{`ksonnet/components`}</h3>\n    <p>{`When migrating from `}<inlineCode parentName=\"p\">{`ksonnet`}</inlineCode>{`, this error might occur, because Tanka does not\nprovide the global `}<inlineCode parentName=\"p\">{`__ksonnet`}</inlineCode>{` variable, nor does it strictly have the concept\nof components.\nYou will need to use the plain Jsonnet `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` feature instead. Note that this\nrequires your code to be inside of one of the\n`}<a parentName=\"p\" {...{\n        \"href\": \"directory-structure/#import-paths\"\n      }}>{`import paths`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"evaluating-jsonnet-runtime-error-couldnt-open-import-klibsonnet-no-match-locally-or-in-the-jsonnet-library-paths\"\n    }}>{`Evaluating jsonnet: RUNTIME ERROR: couldn't open import \"k.libsonnet\": no match locally or in the Jsonnet library paths`}</h3>\n    <p>{`This error can occur when the `}<inlineCode parentName=\"p\">{`k8s-libsonnet`}</inlineCode>{` kubernetes libraries are missing in the\nimport paths. While `}<inlineCode parentName=\"p\">{`k8s-libsonnet`}</inlineCode>{` used to magically include them, Tanka follows a\nmore explicit approach and requires you to install them using `}<inlineCode parentName=\"p\">{`jb`}</inlineCode>{`:`}</p>\n    <pre {...{\n      \"className\": \"material-theme-darker vscode-highlight\",\n      \"data-language\": \"bash\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"vscode-highlight-code\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`$ jb install github.com/jsonnet-libs/k8s-libsonnet/1.21@main`}</span></span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"vscode-highlight-line\"\n        }}><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{`$ `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk9\"\n          }}>{`echo`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk5\"\n          }}>{`\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk6\"\n          }}>{`import 'github.com/jsonnet-libs/k8s-libsonnet/1.21/main.libsonnet'`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk5\"\n          }}>{`\"`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` `}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk12\"\n          }}>{`>`}</span><span parentName=\"span\" {...{\n            \"className\": \"mtk1\"\n          }}>{` lib/k.libsonnet`}</span></span></code></pre>\n    <p>{`This does 2 things:`}</p>\n    <p>{`1) It installs the `}<inlineCode parentName=\"p\">{`k8s-libsonnet`}</inlineCode>{` library (in `}<inlineCode parentName=\"p\">{`vendor/github.com/jsonnet-libs/k8s-libsonnet/1.21/`}</inlineCode>{`).\nYou can replace the `}<inlineCode parentName=\"p\">{`1.21`}</inlineCode>{` matching the Kubernetes version you want to run against.`}</p>\n    <p>{`2) It makes an alias for libraries importing `}<inlineCode parentName=\"p\">{`k.libsonnet`}</inlineCode>{` directly. See\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://tanka.dev/tutorial/k-lib#aliasing\"\n      }}>{`https://tanka.dev/tutorial/k-lib#aliasing`}</a>{` for the alias rationale.`}</p>\n    <h3 {...{\n      \"id\": \"unexpected-diff-if-the-same-port-number-is-used-for-udp-and-tcp\"\n    }}>{`Unexpected diff if the same port number is used for UDP and TCP`}</h3>\n    <p>{`A\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/kubernetes/issues/39188\"\n      }}>{`long-standing bug in `}<inlineCode parentName=\"a\">{`kubectl`}</inlineCode></a>{`\nresults in an incorrect diff output if the same port number is used multiple\ntimes in differently named ports, which commonly happens if a port is specified\nusing both protocols, `}<inlineCode parentName=\"p\">{`tcp`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`udp`}</inlineCode>{`. Nevertheless, `}<inlineCode parentName=\"p\">{`tk apply`}</inlineCode>{` will still work\ncorrectly.`}</p>\n\n    <style {...{\n      \"className\": \"vscode-highlight-styles\"\n    }}>{`\n  \n  .material-theme-darker {\nbackground-color: #212121;\ncolor: #EEFFFF;\n}\n\n.material-theme-darker .mtk1 { color: #FFFFFF; }\n.material-theme-darker .mtk2 { color: #212121; }\n.material-theme-darker .mtk3 { color: #545454; }\n.material-theme-darker .mtk4 { color: #F78C6C; }\n.material-theme-darker .mtk5 { color: #89DDFF; }\n.material-theme-darker .mtk6 { color: #C3E88D; }\n.material-theme-darker .mtk7 { color: #FFCB6B; }\n.material-theme-darker .mtk8 { color: #EEFFFF; }\n.material-theme-darker .mtk9 { color: #82AAFF; }\n.material-theme-darker .mtk10 { color: #FF5370; }\n.material-theme-darker .mtk11 { color: #F07178; }\n.material-theme-darker .mtk12 { color: #C792EA; }\n.material-theme-darker .mtk13 { color: #EEFFFF90; }\n.material-theme-darker .mtk14 { color: #65737E; }\n.material-theme-darker .mtk15 { color: #B2CCD6; }\n.material-theme-darker .mtk16 { color: #C17E70; }\n.material-theme-darker .mtki { font-style: italic; }\n.material-theme-darker .mtkb { font-weight: bold; }\n.material-theme-darker .mtku { text-decoration: underline; text-underline-position: under; }\n`}</style>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}